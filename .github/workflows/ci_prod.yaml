
name: Deploy to Amazon EKS production

on:
  push:
    tags:
      - v*.*.*
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Get tag name
      id: tag-name
      run: echo ::set-output name=tag::$(echo ${GITHUB_REF:11})

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: suter-bridge-website
        IMAGE_TAG: ${{ steps.tag-name.outputs.tag }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Generate kubeconfig
      run: |
        aws eks --region ap-southeast-1 update-kubeconfig --name sutekube

    - uses: azure/setup-helm@v1
      with:
        version: 'v2.15.2'
      id: helm-install

    - name: Helm upgrade chart
      env: 
        IMAGE_TAG: ${{ steps.tag-name.outputs.tag }}
        HELM_BIN: ${{ steps.helm-install.outputs.helm-path }}
      run: |
        echo "Helm upgrade suterusu $IMAGE_TAG"
        $HELM_BIN upgrade -f $GITHUB_WORKSPACE/deploy/suter-bridge-website/values.prod.yaml --namespace=production  suter-bridge-website-production $GITHUB_WORKSPACE/deploy/suter-bridge-website --set=image.tag=$IMAGE_TAG

   